body {
    background-color: aquamarine;
    font-family: sans-serif; /* sets the font in all elements within the body element to default Arial sans-serif */
}

hr {
    border-style: none;
    background-color: white;
    height: 3px;
    width: 40%; /* instead of doing hardcoded pixel values for height, width etc. it is also possible to do percentages so that they scale with the size of the window */
}

h1 {
    color: white;
    font-family: serif; /* this overrides the body font-family property */
}

h2 {
    color: blue;
}

.p-block {
    display: block;
    background-color: blanchedalmond;
    width: 30%; /* setting the width here works because it is a block element */
}

.p-block-centered {
    display: block;
    background-color: blanchedalmond;
    width: 30%; /* setting the width here works because it is a block element */
    margin: 0 auto 0 auto;
}

.p-inline {
    display: inline;
    background-color: blanchedalmond;
    /* width: 30%; doesn't work */
}

.p-inline-block {
    display: inline-block;
    background-color: blanchedalmond;
    width: 60%;
}

#static-position {
    position: static;
    background-color: aliceblue;
}

#relative-position {
    background-color: aliceblue;
    position: relative;
    left: 30px; /* moves the element 30px from the left of where it should actually have been */
    top: 5px; /* moves the element 5px from the top of where it should actually have been */
    /* also possible to set bottom and right */
}

#absolute-position {
    background-color: aliceblue;
    position: absolute;
    right: 30px; /* moves the element 30px from the right edge of the closest parent with relative positioning */
    /* top: 50px; sends the element wayyyyy up, 50px from the very top of the closest parent with relative positioning */
}

#fixed-position {
    background-color: aliceblue;
    position: fixed;
    bottom: 20px; /* fixes the position to 20px from the bottom of the screen */
}

.centering {
    width: 300px;
    text-align: center;
}

/* CSS Syntax */
/* selector { property: value; } */
/* Each property: value line is called a rule */

/* There are different kinds of selectors */
/* tag selectors - tag {} */
/* class selectors - .classname {} */
/* id selectors - #id {} (ID must be unique to pages) */